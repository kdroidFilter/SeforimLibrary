-- Requêtes FTS5 mises à jour pour utiliser plainText

-- Recherche globale avec FTS5
searchAll:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 150) snippet, -- colonne 5 = plainText (after adding categoryId)
    bm25(line_search) rank -- Utilisation de bm25 pour un meilleur ranking
FROM line_search ls
WHERE ls.plainText MATCH ?
LIMIT ? OFFSET ?;

-- Recherche dans un livre spécifique
searchInBook:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 150) snippet,
    bm25(line_search) rank
FROM line_search ls
WHERE ls.plainText MATCH ? AND ls.bookId = ?
LIMIT ? OFFSET ?;

-- Recherche par auteur
searchByAuthor:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 150) snippet,
    bm25(line_search) rank
FROM line_search ls
JOIN book_author ba ON ls.bookId = ba.bookId
JOIN author a ON ba.authorId = a.id
WHERE ls.plainText MATCH ? AND a.name = ?
LIMIT ? OFFSET ?;

-- Recherche avec filtre sur le titre du livre
searchWithBookFilter:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 150) snippet,
    bm25(line_search) rank
FROM line_search ls
WHERE ls.plainText MATCH ?
AND ls.bookTitle MATCH ?
LIMIT ? OFFSET ?;

-- Recherche avec phrase exacte
searchExactPhrase:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 150) snippet,
    bm25(line_search) rank
FROM line_search ls
WHERE ls.plainText MATCH '"' || ? || '"'
LIMIT ? OFFSET ?;

-- Recherche avec opérateurs booléens
searchWithOperators:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 50) snippet,
    bm25(line_search) rank
FROM line_search ls
WHERE ls.plainText MATCH ?
-- No ORDER BY for maximum throughput; rely on FTS natural order
LIMIT ? OFFSET ?;

-- Search within a category (using closure table for descendants)
searchInCategoryWithOperators:
SELECT
    ls.bookId,
    ls.bookTitle,
    ls.id,
    ls.lineIndex,
    snippet(line_search, 5, '<b>', '</b>', '...', 50) snippet,
    bm25(line_search) rank
FROM line_search ls
WHERE ls.plainText MATCH ?
  AND ls.categoryId IN (SELECT descendantId FROM category_closure WHERE ancestorId = ?)
-- No ORDER BY for maximum throughput; rely on FTS natural order
LIMIT ? OFFSET ?;


-- Compter les résultats de recherche
countSearchResults:
SELECT COUNT(*)
FROM line_search
WHERE plainText MATCH ?;

-- Compter les résultats dans un livre spécifique
countSearchResultsInBook:
SELECT COUNT(*)
FROM line_search
WHERE plainText MATCH ? AND bookId = ?;

-- Compter les résultats dans une catégorie (incluant les descendants)
countSearchResultsInCategory:
SELECT COUNT(*)
FROM line_search
WHERE plainText MATCH ?
  AND categoryId IN (SELECT descendantId FROM category_closure WHERE ancestorId = ?);

-- Rebuild the FTS5 index
rebuildFts5Index:
INSERT INTO line_search(line_search) VALUES('rebuild');
