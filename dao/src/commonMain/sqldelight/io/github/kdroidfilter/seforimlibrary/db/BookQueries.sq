-- Queries for books

selectAll:
SELECT * FROM book ORDER BY orderIndex, title;

selectById:
SELECT * FROM book WHERE id = ?;

selectByCategoryId:
SELECT * FROM book WHERE categoryId = ? ORDER BY orderIndex, title;

-- Select all books whose category is a descendant of the given ancestor category
selectByAncestorCategory:
SELECT b.* FROM book b
WHERE b.categoryId IN (SELECT descendantId FROM category_closure WHERE ancestorId = ?)
ORDER BY b.orderIndex, b.title;

selectByTitle:
SELECT * FROM book WHERE title = ? LIMIT 1;

selectByTitleLike:
SELECT * FROM book WHERE title LIKE ? LIMIT 1;

selectManyByTitleLike:
SELECT * FROM book WHERE title LIKE ? ORDER BY orderIndex, title LIMIT ?;


selectByAuthor:
SELECT b.* FROM book b
JOIN book_author ba ON b.id = ba.bookId
JOIN author a ON ba.authorId = a.id
WHERE a.name LIKE ? 
ORDER BY b.orderIndex, b.title;

insert:
INSERT INTO book (categoryId, title, heShortDesc, orderIndex, totalLines)
VALUES (?, ?, ?, ?, ?);

insertWithId:
INSERT INTO book (id, categoryId, title, heShortDesc, orderIndex, totalLines)
VALUES (?, ?, ?, ?, ?, ?);

updateTotalLines:
UPDATE book SET totalLines = ? WHERE id = ?;

delete:
DELETE FROM book WHERE id = ?;

countByCategoryId:
SELECT COUNT(*) FROM book WHERE categoryId = ?;

countAll:
SELECT COUNT(*) FROM book;

getMaxId:
SELECT MAX(id) FROM book;

updateCategoryId:
UPDATE book SET categoryId = ? WHERE id = ?;

-- Update connection flags on book
updateConnectionFlags:
UPDATE book SET 
    hasTargumConnection = ?,
    hasReferenceConnection = ?,
    hasCommentaryConnection = ?,
    hasOtherConnection = ?
WHERE id = ?;

lastInsertRowId:
SELECT last_insert_rowid();
